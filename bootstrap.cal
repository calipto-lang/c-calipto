((data:lambda (

; The bootstrap file is read and evaluated by the runtime before anything else happens.
; This means that the platform must include some functionality, i.e. to read and evaluate
; Calipto source files, before that functionality has actually been defined in Calipto.
;
; The responsibility of the bootstrap file is to reimplement all of that functionality
; other than those parts which are given as primitives, and also provide a hook to load
; and evaluate further source files. This makes the implementation almost completely
; self-hosted.
;
; The bootstrap file is evaluated in a lexical context where symbols of primitive
; functions and special forms are bound to themselves, and program:args is bound to a
; list of program argument strings.
;
; Implementing a reader means also implementing string utilities, a scanner, etc.
; Maybe the responsibility shouldn't solely be on this single bootstrap file. Maybe the
; built-in reader should be used to read in a *set of* bootstrap files.
;
; We have no built-in module system, so how do we link together these bootstrap files?
; How do we define a module system early? Including limiting the scanner to fail on
; reading non-exported symbols of other packages. We need the macro system first.
